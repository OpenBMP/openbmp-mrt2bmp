from ftplib import FTP
import os, sys

class RouteDataSynchronizer:

    ROUTE_VIEWS_FTP_ADDRESS = "archive.routeviews.org"

    def __init__(self):
        self.ftp = FTP(self.ROUTE_VIEWS_FTP_ADDRESS)
        self.ftp.login()
        self.route_view_dir_path = "Router_Data/"

        self.__createDirIfNotExist(self.route_view_dir_path)

    def syncRouterViewArchieve(self):
        directories = self.ftp.nlst()

        for d in directories:
            if d.startswith('route-views.'):
                self.__createDirIfNotExist(self.route_view_dir_path + d)
                self.__syncRouterDirectory(d, self.route_view_dir_path + d)

        self.ftp.quit()

    def __syncRouterDirectory(self, routerName, path):
        self.ftp.cwd(routerName + "/bgpdata")
        directories = self.ftp.nlst()

        for d in directories:
            self.__createDirIfNotExist(path + '/' + d)
            self.__syncDateDirectory(d, path + '/' + d)

        self.ftp.cwd('/')

    def __syncDateDirectory(self, directoryName, path):
        self.ftp.cwd(directoryName)

        self.__createDirIfNotExist(path + '/RIBS')
        self.__createDirIfNotExist(path + '/UPDATES')

        # Download RIB files in RIBS folder.
        self.ftp.cwd('RIBS')
        ribFiles = self.ftp.nlst()

        for r in ribFiles:
            # Download file if does not exist.
            self.__downloadFile(r, path + '/RIBS')

        self.ftp.cwd('../')

        # Download UPDATE files in UPDATES folder.
        self.ftp.cwd('UPDATES')
        updateFiles = self.ftp.nlst()

        for u in updateFiles:
            # Download file if does not exist.
            self.__downloadFile(u, path + '/UPDATES')

        self.ftp.cwd('../')

        self.ftp.cwd('../')

    def __downloadFile(self, fileName, path):
        if not os.path.exists(path + '/' + fileName):
            wFile = open(path + '/' + fileName, "wb")
            self.ftp.retrbinary('RETR ' + fileName, wFile.write)
            wFile.close()


    def __createDirIfNotExist(self, dirPath):
        if not os.path.exists(dirPath):
            os.mkdir(dirPath)
